package test;

public class Namingconventions {
	/*
	 * ！只能对boolean使用，其他变量需要加小括号 switch case 只能匹配值，不能判断范围 default放前面无break，后面语句全部输出
	 * continue，结束当前循环，立即执行下一次循环 while循环使用场景：不明确循环次数，但有明确的循环结束条件 例如迭代器判断hadNext();
	 */
	// public class 公有类，规则：文件中有且仅有一个公有类
	// 文件中的公有类名称必须和文件名一致
	// 标识符中的命名规则：
	/*
	 * 1. 以字母、数字、下划线、美元符组合 2. 数字不能开头 3. 不可以是关键字 4. 大小写敏感
	 */
	// 命名规范
	/*
	 * 1. 根据变量字典 2. 文件(类、接口、枚举)：大驼峰； 成员(方法、变量)：小驼峰； 包名：小写字母；
	 * 常量名：全大写，下划线连接：HOUR_OF_DAY
	 * 
	 * 3.
	 */
	// import，java.lang不需要导入
	// 在当前文件中使用其他包下的文件时，使用import导入(全文件名=全包名.文件名)
	// Ctrl + 关键字，查看方法来源
	// 运行当前文件： 右键空白，Run AS-->java application
	//
	// ==================================================
	// 文本编码方式(4种)
	// preferance-->editors,workspaces,file prospective,src prospective
	// ==================================================
	// 注释的第三种：javadoc
	/**
	 * @author name:***
	 */
	// 放到要注释的代码前面，Alt + Shift + j
	// ==================================================
	// package： java包，使用方法；全包名：资源文件夹到java文件之间的路径，路径分隔符是"."
	// class： 类，class 类名{类体}，*.java，java类文件，*.class，java class文件
	// public：(功能修饰符)公有的(访问修饰符) 当前工程文件的任何地方都可以使用
	// public clsss 公有类，规则：文件中有且仅有一个公有类
	// 标识符中的命名规则：
	/*
	 * 1. 以字母、数字、下划线、美元符组合 2. 数字不能开头 3. 不可以是关键字
	 */
	// 输出语句err用法：用于输出错误信息

	// 语法规则：
	public class cat {
		int a;
		// 类体
		// 定义相关的代码可以直接放到类体中
		// 主要包含：变量定义 + 方法定义
		// 功能类的代码不可以放到类体中

		// 变量
		// 变量定义-简单格式规则：变量类型 变量名称[=变量值]；
		int a1;
		String s1 = "hhh";

		// ate(1);//（其中参数为：实参）
		// 方法定义--简单格式规则：返回类型 方法名称([])
		// 方法中不可以直接定义方法
		void eat() {

		}

		int ate(int a) {// 方法中的变量定义：参数变量(形参)，由实参赋值(传参)
			int a1 = 1;// 局部变量,先定义后使用
			// 变量重名，遵循前置就近原则，局部变量会覆盖掉全局变量
			return 0;
		}

		boolean Oddeven(int a) {
			// return a&1;
			return false;
		}

		void dd() {
			// 过程本质
			// 方法调用：执行所调用的方法中的代码
			// 执行结束后返回到调用位置继续执行
			// 调用方法的简单格式规则；方法名称(参数)

		}

		boolean Oddeven(char c) {// 重名，参数个数、类型、顺序不同，方法重载|在同一个文件中

			return false;
		}
	}
}
